from models.Base import Base


class UserModel(Base):
    __table_name = 'users'

    def __init__(self) -> None:
        Base.__init__(self, table_name=self.__table_name, primary_key='user_id',
                      schema=self.__schema(), timestamp=True, sync=True)

    def __schema(self):
        return {
            'user_id': Base.schema_type(type=int, nullable=False),
            'username': Base.schema_type(str),
            'group_id': Base.schema_type(int),
            'level': Base.schema_type(type=int, default_value=0),
            'editor': Base.schema_type(type=bool, default_value=0),
            'moderator': Base.schema_type(type=bool, default_value=0),
            'role': Base.schema_type(str),
            'nickname': Base.schema_type(str),
            'bio': Base.schema_type(str),
            'birthday': Base.schema_type(str),
            'reputation': Base.schema_type(type=int, default_value=0),
        }

    def add_reputation(self, user_id):
        SQL = f'UPDATE {self.__table_name} SET reputation = reputation + 1 WHERE user_id = {user_id}'
        Base.query(self, SQL)

    def remove_reputation(self, user_id):
        SQL = f'UPDATE {self.__table_name} SET reputation = reputation - 1 WHERE user_id = {user_id}'
        Base.query(self, SQL)


    def get_user_ids_map(self):
        rows = self.findall()

        map = {}
        for row in rows:
            map[row.get('user_id')] = row

        return map
    
    def createByUserInfo(self, user_id, data):
         self.create(['user_id', 'username', 'nickname'], [f'{user_id}', f"'{data.get('screen_name')}'", f"'{data.get('nickname')}'"])

    def profile(self, user_id):
        user = self.findbypk(user_id)

        text = f"""
        –≠—Ç–æ {user.get('nickname') or user.get('user_id')}
–î–æ–ª–∂–Ω–æ—Å—Ç—å: {user.get('role')}
–í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö —Å [–Ω–∏–∫] (–≤—Ä–µ–º—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π)

–†–µ–ø—É—Ç–∞—Ü–∏—è: ‚ú®{user.get('reputation')}
–ü–µ—Ä–≤–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ: {user.get('created_at')} (—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—à–ª–æ)

–û –°–ï–ë–ï:
{user.get('bio')}

–ù–ê–ì–†–ê–î–´:
üéó [–Ω–∞–≥—Ä–∞–¥–∞]
üéó [–Ω–∞–≥—Ä–∞–¥–∞] 
        """

        return text
